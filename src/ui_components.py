import streamlit as st
from .data_operations import (
    add_wishlist_item, update_wishlist_item, delete_wishlist_item,
    validate_item_data, prepare_item_data
)


def render_view_tab(df, sheet):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
    st.subheader("–¢–µ–∫—É—â–∏–π –≤–∏—à–ª–∏—Å—Ç")
    
    if df.empty:
        st.info("–í–∏—à–ª–∏—Å—Ç –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤–æ –≤–∫–ª–∞–¥–∫–µ '–î–æ–±–∞–≤–∏—Ç—å/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'")
        return
    
    col1, col2 = st.columns([3, 1])
    
    with col2:
        category_filter = st.selectbox(
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
            ["–í—Å–µ"] + list(df['–ö–∞—Ç–µ–≥–æ—Ä–∏—è'].unique()) if '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' in df.columns else ["–í—Å–µ"]
        )
    
    filtered_df = df.copy()
    if category_filter != "–í—Å–µ" and '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' in filtered_df.columns:
        filtered_df = filtered_df[filtered_df['–ö–∞—Ç–µ–≥–æ—Ä–∏—è'] == category_filter]
    
    with col1:
        for idx, row in filtered_df.iterrows():
            with st.expander(f"{row.get('–ü–æ–¥–∞—Ä–æ–∫', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}"):
                col_info, col_actions = st.columns([3, 1])
                
                with col_info:
                    st.write(f"**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {row.get('–ö–∞—Ç–µ–≥–æ—Ä–∏—è', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
                    st.write(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {row.get('–û–ø–∏—Å–∞–Ω–∏–µ', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')}")
                    if row.get('–°—Å—ã–ª–∫–∞'):
                        st.write(f"**–°—Å—ã–ª–∫–∞:** [–ü–µ—Ä–µ–π—Ç–∏]({row['–°—Å—ã–ª–∫–∞']})")
                
                with col_actions:
                    if st.button(f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", key=f"delete_{idx}"):
                        if delete_wishlist_item(sheet, idx + 2):
                            st.success("–≠–ª–µ–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω!")
                            st.rerun()


def render_add_form(sheet):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"""
    st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç")
    
    with st.form("add_item_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            gift_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞ *", key="gift_name")
            category = st.text_input("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", key="category")
        
        with col2:
            description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ", key="description")
            link = st.text_input("–°—Å—ã–ª–∫–∞", key="link")
        
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –≤ –≤–∏—à–ª–∏—Å—Ç")
        
        if submitted:
            is_valid, error_msg = validate_item_data(gift_name)
            if not is_valid:
                st.error(error_msg)
                return
            
            item_data = prepare_item_data(gift_name, category, description, link)
            
            if add_wishlist_item(sheet, item_data):
                st.success("–≠–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∏—à–ª–∏—Å—Ç!")
                st.rerun()


def render_edit_form(df, sheet):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    if df.empty:
        return
    
    st.subheader("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã")
    
    edit_item = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        options=range(len(df)),
        format_func=lambda x: df.iloc[x].get('–ü–æ–¥–∞—Ä–æ–∫', f'–≠–ª–µ–º–µ–Ω—Ç {x+1}'),
        key="edit_select"
    )
    
    if edit_item is not None:
        selected_row = df.iloc[edit_item]
        
        with st.form("edit_item_form"):
            col1, col2 = st.columns(2)
            
            with col1:
                edit_gift_name = st.text_input(
                    "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞ *", 
                    value=selected_row.get('–ü–æ–¥–∞—Ä–æ–∫', ''),
                    key="edit_gift_name"
                )
                edit_category = st.text_input(
                    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è", 
                    value=selected_row.get('–ö–∞—Ç–µ–≥–æ—Ä–∏—è', ''),
                    key="edit_category"
                )
            
            with col2:
                edit_description = st.text_area(
                    "–û–ø–∏—Å–∞–Ω–∏–µ", 
                    value=selected_row.get('–û–ø–∏—Å–∞–Ω–∏–µ', ''),
                    key="edit_description"
                )
                edit_link = st.text_input(
                    "–°—Å—ã–ª–∫–∞", 
                    value=selected_row.get('–°—Å—ã–ª–∫–∞', ''),
                    key="edit_link"
                )
            
            updated = st.form_submit_button("–û–±–Ω–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç")
            
            if updated:
                is_valid, error_msg = validate_item_data(edit_gift_name)
                if not is_valid:
                    st.error(error_msg)
                    return
                
                item_data = prepare_item_data(
                    edit_gift_name, edit_category, edit_description, edit_link,
                    selected=selected_row.get('–í—ã–±—Ä–∞–Ω–æ', False)
                )
                
                if update_wishlist_item(sheet, edit_item + 2, item_data):
                    st.success("–≠–ª–µ–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!")
                    st.rerun()


def render_add_edit_tab(df, sheet):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    render_add_form(sheet)
    render_edit_form(df, sheet)